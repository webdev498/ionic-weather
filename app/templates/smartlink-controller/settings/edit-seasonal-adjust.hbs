<header class="bar bar-nav weathermatic-header">
  {{#link-to 'smartlink-controller.settings.seasonal-adjust' model.smartlinkController class='btn btn-link btn-nav pull-left'}}
    <span class="icon icon-left-nav"></span>
  {{/link-to}}

  <h1 class="title">{{fa-icon 'gear'}} {{t 'programSettings.seasonalAdjust'}}</h1>
</header>

<div class="content weathermatic-content">
  {{need-send-message smartlinkController=model.smartlinkController transmit='transmit'}}

  <div class="content-padded">
    <h2>{{model.name}}</h2>
  </div>

  <ul class="table-view">
    <li class="table-view-cell weathermatic-select-program-row weathermatic-select-program-a">
      <span class="pull-left">
        <h3>Program A</h3>
        {{#if model.programASeasonalAdjust.program.description.length}}
          <p class="weathermatic-program-description">{{short-text model.programASeasonalAdjust.program.description}}</p>
        {{/if}}
      </span>
      <span class="pull-right weathermatic-settings-input-small">
        <select onchange={{action (mut model.programASeasonalAdjust.percentage) value="target.value"}}>
          {{#each availableSeasonalAdjustValues as |adj|}}
            <option value={{adj.value}}
              selected={{equiv adj.value model.programASeasonalAdjust.percentage}}>{{adj.label}}</option>
          {{/each}}
        </select>
      </span>
    </li>
    <li class="table-view-cell weathermatic-select-program-row weathermatic-select-program-b">
      <span class="pull-left">
        <h3>Program B</h3>
        {{#if model.programBSeasonalAdjust.program.description.length}}
          <p class="weathermatic-program-description">{{short-text model.programBSeasonalAdjust.program.description}}</p>
        {{/if}}
      </span>
      <span class="pull-right weathermatic-settings-input-small">
        <select onchange={{action (mut model.programBSeasonalAdjust.percentage) value="target.value"}}>
          {{#each availableSeasonalAdjustValues as |adj|}}
            <option value={{adj.value}}
              selected={{equiv adj.value model.programBSeasonalAdjust.percentage}}>{{adj.label}}</option>
          {{/each}}
        </select>
      </span>
    </li>
    <li class="table-view-cell weathermatic-select-program-row weathermatic-select-program-c">
      <span class="pull-left">
        <h3>Program C</h3>
        {{#if model.programCSeasonalAdjust.program.description.length}}
          <p class="weathermatic-program-description">{{short-text model.programCSeasonalAdjust.program.description}}</p>
        {{/if}}
      </span>
      <span class="pull-right weathermatic-settings-input-small">
        <select onchange={{action (mut model.programCSeasonalAdjust.percentage) value="target.value"}}>
          {{#each availableSeasonalAdjustValues as |adj|}}
            <option value={{adj.value}}
              selected={{equiv adj.value model.programCSeasonalAdjust.percentage}}>{{adj.label}}</option>
          {{/each}}
        </select>
      </span>
    </li>
    <li class="table-view-cell weathermatic-select-program-row weathermatic-select-program-d">
      <span class="pull-left">
        <h3>Program D</h3>
        {{#if model.programDSeasonalAdjust.program.description.length}}
          <p class="weathermatic-program-description">{{short-text model.programDSeasonalAdjust.program.description}}</p>
        {{/if}}
      </span>
      <span class="pull-right weathermatic-settings-input-small">
        <select onchange={{action (mut model.programDSeasonalAdjust.percentage) value="target.value"}}>
          {{#each availableSeasonalAdjustValues as |adj|}}
            <option value={{adj.value}}
              selected={{equiv adj.value model.programDSeasonalAdjust.percentage}}>{{adj.label}}</option>
          {{/each}}
        </select>
      </span>
    </li>
  </ul>
  <div class="content-padded">
    <button class="btn btn-block btn-positive" {{action 'save'}}>
      {{fa-icon 'save'}} {{t 'common.save'}}
    </button>
  </div>
</div>

{{!
  `actionReceiver` attribute exposes component action to the outside world.
  Uses this add-on: https://github.com/GavinJoyce/ember-component-inbound-actions
}}
{{loading-modal actionReceiver=loadingModal loadingFinished='loadingFinished' loadingAbandoned='loadingAbandoned'}}
