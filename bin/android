#!/bin/bash
set -e

ORIG_DIR=`pwd`
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ANDROID_BUILD_TOOLS_VERSION=22.0.1
KEYSTORE=$DIR/../smartlink.keystore
KEYSTORE_PASSWORD="Savewatern0w1"
KEY_ALIAS="smartlinkmobile"
KEY_PASSWORD="Savewatern0w1"
ZIPALIGN_BINARY=$ANDROID_HOME/build-tools/$ANDROID_BUILD_TOOLS_VERSION/zipalign
UNSIGNED_APK_FILE=$DIR/../cordova/platforms/android/ant-build/MainActivity-release-unsigned.apk
FINAL_APK_FILE=$DIR/../smartlink-android.apk

if [ -f $FINAL_APK_FILE ]; then
  echo "Removing old .apk file at $FINAL_APK_FILE"
  rm $FINAL_APK_FILE
fi

if [ ! -f $KEYSTORE ]; then
  echo "Cannot find keystore file at $KEYSTORE"
  echo "To generate a new keystore, use:"
  echo ""
  echo "  keytool -genkey -v \\"
  echo "    -keystore $KEYSTORE \\"
  echo "    -alias $KEY_ALIAS \\"
  echo "    -keyalg RSA \\"
  echo "    -keysize 2048 \\"
  echo "    -validity 10000"
  echo ""

  exit
fi

echo "Removing old android project"
ember cordova platform remove android

echo "Adding android platform"
ember cordova platform add android

echo "Adding plugins"
source  $DIR/install_plugins

echo "Building android project"
echo "Environment: $EMBER_ENV"
MOBILE_PLATFORM=android ember cordova:build --environment=${EMBER_ENV:=staging} --platform=android

echo "Copying image files"

CORDOVA_DIR=$DIR/../cordova
SIZES="hdpi ldpi mdpi xhdpi"

for SIZE in $SIZES; do
  echo "SIZE: $SIZE"
  rm -f $CORDOVA_DIR/platforms/android/res/drawable-$SIZE/{icon.png,screen.png}
  rm -f $CORDOVA_DIR/platforms/android/res/drawable-port-$SIZE/{icon.png,screen.png}
  rm -f $CORDOVA_DIR/platforms/android/res/drawable-land-$SIZE/{icon.png,screen.png}

  # Icon
  cp $CORDOVA_DIR/res/android/icons/wmatic_icon.png $CORDOVA_DIR/platforms/android/res/drawable-$SIZE/icon.png

  # Splash images
  SRC_FILE=$CORDOVA_DIR/res/android/splash_images/splash_$SIZE.png
  if [ -e $SRC_FILE ]; then
    cp $SRC_FILE $CORDOVA_DIR/platforms/android/res/drawable-$SIZE
  else
    echo "No image file to copy, skipping: $SRC_FILE"
  fi

  SRC_FILE=$CORDOVA_DIR/res/android/splash_images/splash_"$SIZE"_land.png
  if [ -e $SRC_FILE ]; then
    cp $SRC_FILE $CORDOVA_DIR/platforms/android/res/drawable-land-$SIZE
  else
    echo "No image file to copy, skipping: $SRC_FILE"
  fi
done

rm -f $CORDOVA_DIR/platforms/android/res/drawable/{icon.png,screen.png}
cp $CORDOVA_DIR/res/android/icons/wmatic_icon.png $CORDOVA_DIR/platforms/android/res/drawable

echo "Compiling apk file"
cd $DIR/../cordova
cordova build android --release

cd $ORIG_DIR

echo "Signing apk file"
jarsigner -verbose \
  -storepass $KEYSTORE_PASSWORD \
  -keypass $KEY_PASSWORD \
  -sigalg SHA1withRSA \
  -digestalg SHA1 \
  -keystore $KEYSTORE \
  $UNSIGNED_APK_FILE \
  $KEY_ALIAS

echo "Aligning signed apk file"
$ZIPALIGN_BINARY -v 4 $UNSIGNED_APK_FILE $FINAL_APK_FILE
